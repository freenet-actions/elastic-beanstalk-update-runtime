import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ElasticBeanstalkClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ElasticBeanstalkClient";
import { DeleteConfigurationTemplateMessage } from "../models/models_0";
/**
 * @public
 *
 * The input for {@link DeleteConfigurationTemplateCommand}.
 */
export interface DeleteConfigurationTemplateCommandInput extends DeleteConfigurationTemplateMessage {
}
/**
 * @public
 *
 * The output of {@link DeleteConfigurationTemplateCommand}.
 */
export interface DeleteConfigurationTemplateCommandOutput extends __MetadataBearer {
}
/**
 * @public
 * <p>Deletes the specified configuration template.</p>
 *          <note>
 *             <p>When you launch an environment using a configuration template, the environment gets a
 *         copy of the template. You can delete or modify the environment's copy of the template
 *         without affecting the running environment.</p>
 *          </note>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ElasticBeanstalkClient, DeleteConfigurationTemplateCommand } from "@aws-sdk/client-elastic-beanstalk"; // ES Modules import
 * // const { ElasticBeanstalkClient, DeleteConfigurationTemplateCommand } = require("@aws-sdk/client-elastic-beanstalk"); // CommonJS import
 * const client = new ElasticBeanstalkClient(config);
 * const input = {
 *   ApplicationName: "STRING_VALUE", // required
 *   TemplateName: "STRING_VALUE", // required
 * };
 * const command = new DeleteConfigurationTemplateCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @param DeleteConfigurationTemplateCommandInput - {@link DeleteConfigurationTemplateCommandInput}
 * @returns {@link DeleteConfigurationTemplateCommandOutput}
 * @see {@link DeleteConfigurationTemplateCommandInput} for command's `input` shape.
 * @see {@link DeleteConfigurationTemplateCommandOutput} for command's `response` shape.
 * @see {@link ElasticBeanstalkClientResolvedConfig | config} for ElasticBeanstalkClient's `config` shape.
 *
 * @throws {@link OperationInProgressException} (client fault)
 *  <p>Unable to perform the specified operation because another operation that effects an
 *       element in this activity is already in progress.</p>
 *
 *
 * @example To delete a configuration template
 * ```javascript
 * // The following operation deletes a configuration template named my-template for an application named my-app:
 * const input = {
 *   "ApplicationName": "my-app",
 *   "TemplateName": "my-template"
 * };
 * const command = new DeleteConfigurationTemplateCommand(input);
 * await client.send(command);
 * // example id: to-delete-a-configuration-template-1456269836701
 * ```
 *
 */
export declare class DeleteConfigurationTemplateCommand extends $Command<DeleteConfigurationTemplateCommandInput, DeleteConfigurationTemplateCommandOutput, ElasticBeanstalkClientResolvedConfig> {
    readonly input: DeleteConfigurationTemplateCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: DeleteConfigurationTemplateCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ElasticBeanstalkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteConfigurationTemplateCommandInput, DeleteConfigurationTemplateCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
