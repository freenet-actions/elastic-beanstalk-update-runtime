import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ElasticBeanstalkClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ElasticBeanstalkClient";
import { ApplicationVersionDescriptionsMessage, DescribeApplicationVersionsMessage } from "../models/models_0";
/**
 * @public
 *
 * The input for {@link DescribeApplicationVersionsCommand}.
 */
export interface DescribeApplicationVersionsCommandInput extends DescribeApplicationVersionsMessage {
}
/**
 * @public
 *
 * The output of {@link DescribeApplicationVersionsCommand}.
 */
export interface DescribeApplicationVersionsCommandOutput extends ApplicationVersionDescriptionsMessage, __MetadataBearer {
}
/**
 * @public
 * <p>Retrieve a list of application versions.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ElasticBeanstalkClient, DescribeApplicationVersionsCommand } from "@aws-sdk/client-elastic-beanstalk"; // ES Modules import
 * // const { ElasticBeanstalkClient, DescribeApplicationVersionsCommand } = require("@aws-sdk/client-elastic-beanstalk"); // CommonJS import
 * const client = new ElasticBeanstalkClient(config);
 * const input = {
 *   ApplicationName: "STRING_VALUE",
 *   VersionLabels: [
 *     "STRING_VALUE",
 *   ],
 *   MaxRecords: Number("int"),
 *   NextToken: "STRING_VALUE",
 * };
 * const command = new DescribeApplicationVersionsCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @param DescribeApplicationVersionsCommandInput - {@link DescribeApplicationVersionsCommandInput}
 * @returns {@link DescribeApplicationVersionsCommandOutput}
 * @see {@link DescribeApplicationVersionsCommandInput} for command's `input` shape.
 * @see {@link DescribeApplicationVersionsCommandOutput} for command's `response` shape.
 * @see {@link ElasticBeanstalkClientResolvedConfig | config} for ElasticBeanstalkClient's `config` shape.
 *
 *
 * @example To view information about an application version
 * ```javascript
 * // The following operation retrieves information about an application version labeled v2:
 * const input = {
 *   "ApplicationName": "my-app",
 *   "VersionLabels": [
 *     "v2"
 *   ]
 * };
 * const command = new DescribeApplicationVersionsCommand(input);
 * const response = await client.send(command);
 * /* response ==
 * {
 *   "ApplicationVersions": [
 *     {
 *       "ApplicationName": "my-app",
 *       "DateCreated": "2015-07-23T01:32:26.079Z",
 *       "DateUpdated": "2015-07-23T01:32:26.079Z",
 *       "Description": "update cover page",
 *       "SourceBundle": {
 *         "S3Bucket": "elasticbeanstalk-us-west-2-015321684451",
 *         "S3Key": "my-app/5026-stage-150723_224258.war"
 *       },
 *       "VersionLabel": "v2"
 *     },
 *     {
 *       "ApplicationName": "my-app",
 *       "DateCreated": "2015-07-23T22:26:10.816Z",
 *       "DateUpdated": "2015-07-23T22:26:10.816Z",
 *       "Description": "initial version",
 *       "SourceBundle": {
 *         "S3Bucket": "elasticbeanstalk-us-west-2-015321684451",
 *         "S3Key": "my-app/5026-stage-150723_222618.war"
 *       },
 *       "VersionLabel": "v1"
 *     }
 *   ]
 * }
 * *\/
 * // example id: to-view-information-about-an-application-version-1456269947428
 * ```
 *
 */
export declare class DescribeApplicationVersionsCommand extends $Command<DescribeApplicationVersionsCommandInput, DescribeApplicationVersionsCommandOutput, ElasticBeanstalkClientResolvedConfig> {
    readonly input: DescribeApplicationVersionsCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: DescribeApplicationVersionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ElasticBeanstalkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeApplicationVersionsCommandInput, DescribeApplicationVersionsCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
