import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ElasticBeanstalkClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ElasticBeanstalkClient";
import { ApplicationDescriptionsMessage, DescribeApplicationsMessage } from "../models/models_0";
/**
 * @public
 *
 * The input for {@link DescribeApplicationsCommand}.
 */
export interface DescribeApplicationsCommandInput extends DescribeApplicationsMessage {
}
/**
 * @public
 *
 * The output of {@link DescribeApplicationsCommand}.
 */
export interface DescribeApplicationsCommandOutput extends ApplicationDescriptionsMessage, __MetadataBearer {
}
/**
 * @public
 * <p>Returns the descriptions of existing applications.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ElasticBeanstalkClient, DescribeApplicationsCommand } from "@aws-sdk/client-elastic-beanstalk"; // ES Modules import
 * // const { ElasticBeanstalkClient, DescribeApplicationsCommand } = require("@aws-sdk/client-elastic-beanstalk"); // CommonJS import
 * const client = new ElasticBeanstalkClient(config);
 * const command = new DescribeApplicationsCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @param DescribeApplicationsCommandInput - {@link DescribeApplicationsCommandInput}
 * @returns {@link DescribeApplicationsCommandOutput}
 * @see {@link DescribeApplicationsCommandInput} for command's `input` shape.
 * @see {@link DescribeApplicationsCommandOutput} for command's `response` shape.
 * @see {@link ElasticBeanstalkClientResolvedConfig | config} for ElasticBeanstalkClient's `config` shape.
 *
 *
 * @example To view a list of applications
 * ```javascript
 * // The following operation retrieves information about applications in the current region:
 * const input = {};
 * const command = new DescribeApplicationsCommand(input);
 * const response = await client.send(command);
 * /* response ==
 * {
 *   "Applications": [
 *     {
 *       "ApplicationName": "ruby",
 *       "ConfigurationTemplates": [],
 *       "DateCreated": "2015-08-13T21:05:44.376Z",
 *       "DateUpdated": "2015-08-13T21:05:44.376Z",
 *       "Versions": [
 *         "Sample Application"
 *       ]
 *     },
 *     {
 *       "ApplicationName": "pythonsample",
 *       "ConfigurationTemplates": [],
 *       "DateCreated": "2015-08-13T19:05:43.637Z",
 *       "DateUpdated": "2015-08-13T19:05:43.637Z",
 *       "Description": "Application created from the EB CLI using \"eb init\"",
 *       "Versions": [
 *         "Sample Application"
 *       ]
 *     },
 *     {
 *       "ApplicationName": "nodejs-example",
 *       "ConfigurationTemplates": [],
 *       "DateCreated": "2015-08-06T17:50:02.486Z",
 *       "DateUpdated": "2015-08-06T17:50:02.486Z",
 *       "Versions": [
 *         "add elasticache",
 *         "First Release"
 *       ]
 *     }
 *   ]
 * }
 * *\/
 * // example id: to-view-a-list-of-applications-1456270027373
 * ```
 *
 */
export declare class DescribeApplicationsCommand extends $Command<DescribeApplicationsCommandInput, DescribeApplicationsCommandOutput, ElasticBeanstalkClientResolvedConfig> {
    readonly input: DescribeApplicationsCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: DescribeApplicationsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ElasticBeanstalkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeApplicationsCommandInput, DescribeApplicationsCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
