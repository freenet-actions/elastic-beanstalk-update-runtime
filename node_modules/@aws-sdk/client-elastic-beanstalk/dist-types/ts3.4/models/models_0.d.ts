import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { ElasticBeanstalkServiceException as __BaseException } from "./ElasticBeanstalkServiceException";
export interface AbortEnvironmentUpdateMessage {
  EnvironmentId?: string;
  EnvironmentName?: string;
}
export declare class InsufficientPrivilegesException extends __BaseException {
  readonly name: "InsufficientPrivilegesException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientPrivilegesException,
      __BaseException
    >
  );
}
export declare type ActionHistoryStatus = "Completed" | "Failed" | "Unknown";
export declare type ActionStatus =
  | "Pending"
  | "Running"
  | "Scheduled"
  | "Unknown";
export declare type ActionType =
  | "InstanceRefresh"
  | "PlatformUpdate"
  | "Unknown";
export interface MaxAgeRule {
  Enabled: boolean | undefined;
  MaxAgeInDays?: number;
  DeleteSourceFromS3?: boolean;
}
export interface MaxCountRule {
  Enabled: boolean | undefined;
  MaxCount?: number;
  DeleteSourceFromS3?: boolean;
}
export interface ApplicationVersionLifecycleConfig {
  MaxCountRule?: MaxCountRule;
  MaxAgeRule?: MaxAgeRule;
}
export interface ApplicationResourceLifecycleConfig {
  ServiceRole?: string;
  VersionLifecycleConfig?: ApplicationVersionLifecycleConfig;
}
export interface ApplicationDescription {
  ApplicationArn?: string;
  ApplicationName?: string;
  Description?: string;
  DateCreated?: Date;
  DateUpdated?: Date;
  Versions?: string[];
  ConfigurationTemplates?: string[];
  ResourceLifecycleConfig?: ApplicationResourceLifecycleConfig;
}
export interface ApplicationDescriptionMessage {
  Application?: ApplicationDescription;
}
export interface ApplicationDescriptionsMessage {
  Applications?: ApplicationDescription[];
}
export interface Latency {
  P999?: number;
  P99?: number;
  P95?: number;
  P90?: number;
  P85?: number;
  P75?: number;
  P50?: number;
  P10?: number;
}
export interface StatusCodes {
  Status2xx?: number;
  Status3xx?: number;
  Status4xx?: number;
  Status5xx?: number;
}
export interface ApplicationMetrics {
  Duration?: number;
  RequestCount?: number;
  StatusCodes?: StatusCodes;
  Latency?: Latency;
}
export interface ApplicationResourceLifecycleDescriptionMessage {
  ApplicationName?: string;
  ResourceLifecycleConfig?: ApplicationResourceLifecycleConfig;
}
export declare type SourceRepository = "CodeCommit" | "S3";
export declare type SourceType = "Git" | "Zip";
export interface SourceBuildInformation {
  SourceType: SourceType | string | undefined;
  SourceRepository: SourceRepository | string | undefined;
  SourceLocation: string | undefined;
}
export interface S3Location {
  S3Bucket?: string;
  S3Key?: string;
}
export declare type ApplicationVersionStatus =
  | "Building"
  | "Failed"
  | "Processed"
  | "Processing"
  | "Unprocessed";
export interface ApplicationVersionDescription {
  ApplicationVersionArn?: string;
  ApplicationName?: string;
  Description?: string;
  VersionLabel?: string;
  SourceBuildInformation?: SourceBuildInformation;
  BuildArn?: string;
  SourceBundle?: S3Location;
  DateCreated?: Date;
  DateUpdated?: Date;
  Status?: ApplicationVersionStatus | string;
}
export interface ApplicationVersionDescriptionMessage {
  ApplicationVersion?: ApplicationVersionDescription;
}
export interface ApplicationVersionDescriptionsMessage {
  ApplicationVersions?: ApplicationVersionDescription[];
  NextToken?: string;
}
export interface ApplyEnvironmentManagedActionRequest {
  EnvironmentName?: string;
  EnvironmentId?: string;
  ActionId: string | undefined;
}
export interface ApplyEnvironmentManagedActionResult {
  ActionId?: string;
  ActionDescription?: string;
  ActionType?: ActionType | string;
  Status?: string;
}
export declare class ElasticBeanstalkServiceException extends __BaseException {
  readonly name: "ElasticBeanstalkServiceException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ElasticBeanstalkServiceException,
      __BaseException
    >
  );
}
export declare class ManagedActionInvalidStateException extends __BaseException {
  readonly name: "ManagedActionInvalidStateException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ManagedActionInvalidStateException,
      __BaseException
    >
  );
}
export interface AssociateEnvironmentOperationsRoleMessage {
  EnvironmentName: string | undefined;
  OperationsRole: string | undefined;
}
export interface AutoScalingGroup {
  Name?: string;
}
export interface SolutionStackDescription {
  SolutionStackName?: string;
  PermittedFileTypes?: string[];
}
export interface CheckDNSAvailabilityMessage {
  CNAMEPrefix: string | undefined;
}
export interface CheckDNSAvailabilityResultMessage {
  Available?: boolean;
  FullyQualifiedCNAME?: string;
}
export interface ComposeEnvironmentsMessage {
  ApplicationName?: string;
  GroupName?: string;
  VersionLabels?: string[];
}
export interface EnvironmentLink {
  LinkName?: string;
  EnvironmentName?: string;
}
export declare type EnvironmentHealth = "Green" | "Grey" | "Red" | "Yellow";
export declare type EnvironmentHealthStatus =
  | "Degraded"
  | "Info"
  | "NoData"
  | "Ok"
  | "Pending"
  | "Severe"
  | "Suspended"
  | "Unknown"
  | "Warning";
export interface Listener {
  Protocol?: string;
  Port?: number;
}
export interface LoadBalancerDescription {
  LoadBalancerName?: string;
  Domain?: string;
  Listeners?: Listener[];
}
export interface EnvironmentResourcesDescription {
  LoadBalancer?: LoadBalancerDescription;
}
export declare type EnvironmentStatus =
  | "Aborting"
  | "Launching"
  | "LinkingFrom"
  | "LinkingTo"
  | "Ready"
  | "Terminated"
  | "Terminating"
  | "Updating";
export interface EnvironmentTier {
  Name?: string;
  Type?: string;
  Version?: string;
}
export interface EnvironmentDescription {
  EnvironmentName?: string;
  EnvironmentId?: string;
  ApplicationName?: string;
  VersionLabel?: string;
  SolutionStackName?: string;
  PlatformArn?: string;
  TemplateName?: string;
  Description?: string;
  EndpointURL?: string;
  CNAME?: string;
  DateCreated?: Date;
  DateUpdated?: Date;
  Status?: EnvironmentStatus | string;
  AbortableOperationInProgress?: boolean;
  Health?: EnvironmentHealth | string;
  HealthStatus?: EnvironmentHealthStatus | string;
  Resources?: EnvironmentResourcesDescription;
  Tier?: EnvironmentTier;
  EnvironmentLinks?: EnvironmentLink[];
  EnvironmentArn?: string;
  OperationsRole?: string;
}
export interface EnvironmentDescriptionsMessage {
  Environments?: EnvironmentDescription[];
  NextToken?: string;
}
export declare class TooManyEnvironmentsException extends __BaseException {
  readonly name: "TooManyEnvironmentsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyEnvironmentsException, __BaseException>
  );
}
export interface Tag {
  Key?: string;
  Value?: string;
}
export interface CreateApplicationMessage {
  ApplicationName: string | undefined;
  Description?: string;
  ResourceLifecycleConfig?: ApplicationResourceLifecycleConfig;
  Tags?: Tag[];
}
export declare class TooManyApplicationsException extends __BaseException {
  readonly name: "TooManyApplicationsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyApplicationsException, __BaseException>
  );
}
export declare class CodeBuildNotInServiceRegionException extends __BaseException {
  readonly name: "CodeBuildNotInServiceRegionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      CodeBuildNotInServiceRegionException,
      __BaseException
    >
  );
}
export declare enum ComputeType {
  BUILD_GENERAL1_LARGE = "BUILD_GENERAL1_LARGE",
  BUILD_GENERAL1_MEDIUM = "BUILD_GENERAL1_MEDIUM",
  BUILD_GENERAL1_SMALL = "BUILD_GENERAL1_SMALL",
}
export interface BuildConfiguration {
  ArtifactName?: string;
  CodeBuildServiceRole: string | undefined;
  ComputeType?: ComputeType | string;
  Image: string | undefined;
  TimeoutInMinutes?: number;
}
export interface CreateApplicationVersionMessage {
  ApplicationName: string | undefined;
  VersionLabel: string | undefined;
  Description?: string;
  SourceBuildInformation?: SourceBuildInformation;
  SourceBundle?: S3Location;
  BuildConfiguration?: BuildConfiguration;
  AutoCreateApplication?: boolean;
  Process?: boolean;
  Tags?: Tag[];
}
export declare class S3LocationNotInServiceRegionException extends __BaseException {
  readonly name: "S3LocationNotInServiceRegionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      S3LocationNotInServiceRegionException,
      __BaseException
    >
  );
}
export declare class TooManyApplicationVersionsException extends __BaseException {
  readonly name: "TooManyApplicationVersionsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      TooManyApplicationVersionsException,
      __BaseException
    >
  );
}
export declare type ConfigurationDeploymentStatus =
  | "deployed"
  | "failed"
  | "pending";
export interface ConfigurationOptionSetting {
  ResourceName?: string;
  Namespace?: string;
  OptionName?: string;
  Value?: string;
}
export interface ConfigurationSettingsDescription {
  SolutionStackName?: string;
  PlatformArn?: string;
  ApplicationName?: string;
  TemplateName?: string;
  Description?: string;
  EnvironmentName?: string;
  DeploymentStatus?: ConfigurationDeploymentStatus | string;
  DateCreated?: Date;
  DateUpdated?: Date;
  OptionSettings?: ConfigurationOptionSetting[];
}
export interface SourceConfiguration {
  ApplicationName?: string;
  TemplateName?: string;
}
export interface CreateConfigurationTemplateMessage {
  ApplicationName: string | undefined;
  TemplateName: string | undefined;
  SolutionStackName?: string;
  PlatformArn?: string;
  SourceConfiguration?: SourceConfiguration;
  EnvironmentId?: string;
  Description?: string;
  OptionSettings?: ConfigurationOptionSetting[];
  Tags?: Tag[];
}
export declare class TooManyBucketsException extends __BaseException {
  readonly name: "TooManyBucketsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyBucketsException, __BaseException>
  );
}
export declare class TooManyConfigurationTemplatesException extends __BaseException {
  readonly name: "TooManyConfigurationTemplatesException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      TooManyConfigurationTemplatesException,
      __BaseException
    >
  );
}
export interface OptionSpecification {
  ResourceName?: string;
  Namespace?: string;
  OptionName?: string;
}
export interface CreateEnvironmentMessage {
  ApplicationName: string | undefined;
  EnvironmentName?: string;
  GroupName?: string;
  Description?: string;
  CNAMEPrefix?: string;
  Tier?: EnvironmentTier;
  Tags?: Tag[];
  VersionLabel?: string;
  TemplateName?: string;
  SolutionStackName?: string;
  PlatformArn?: string;
  OptionSettings?: ConfigurationOptionSetting[];
  OptionsToRemove?: OptionSpecification[];
  OperationsRole?: string;
}
export interface CreatePlatformVersionRequest {
  PlatformName: string | undefined;
  PlatformVersion: string | undefined;
  PlatformDefinitionBundle: S3Location | undefined;
  EnvironmentName?: string;
  OptionSettings?: ConfigurationOptionSetting[];
  Tags?: Tag[];
}
export interface Builder {
  ARN?: string;
}
export declare type PlatformStatus =
  | "Creating"
  | "Deleted"
  | "Deleting"
  | "Failed"
  | "Ready";
export interface PlatformSummary {
  PlatformArn?: string;
  PlatformOwner?: string;
  PlatformStatus?: PlatformStatus | string;
  PlatformCategory?: string;
  OperatingSystemName?: string;
  OperatingSystemVersion?: string;
  SupportedTierList?: string[];
  SupportedAddonList?: string[];
  PlatformLifecycleState?: string;
  PlatformVersion?: string;
  PlatformBranchName?: string;
  PlatformBranchLifecycleState?: string;
}
export interface CreatePlatformVersionResult {
  PlatformSummary?: PlatformSummary;
  Builder?: Builder;
}
export declare class TooManyPlatformsException extends __BaseException {
  readonly name: "TooManyPlatformsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyPlatformsException, __BaseException>
  );
}
export interface CreateStorageLocationResultMessage {
  S3Bucket?: string;
}
export declare class S3SubscriptionRequiredException extends __BaseException {
  readonly name: "S3SubscriptionRequiredException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      S3SubscriptionRequiredException,
      __BaseException
    >
  );
}
export interface DeleteApplicationMessage {
  ApplicationName: string | undefined;
  TerminateEnvByForce?: boolean;
}
export declare class OperationInProgressException extends __BaseException {
  readonly name: "OperationInProgressException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<OperationInProgressException, __BaseException>
  );
}
export interface DeleteApplicationVersionMessage {
  ApplicationName: string | undefined;
  VersionLabel: string | undefined;
  DeleteSourceBundle?: boolean;
}
export declare class SourceBundleDeletionException extends __BaseException {
  readonly name: "SourceBundleDeletionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SourceBundleDeletionException, __BaseException>
  );
}
export interface DeleteConfigurationTemplateMessage {
  ApplicationName: string | undefined;
  TemplateName: string | undefined;
}
export interface DeleteEnvironmentConfigurationMessage {
  ApplicationName: string | undefined;
  EnvironmentName: string | undefined;
}
export interface DeletePlatformVersionRequest {
  PlatformArn?: string;
}
export interface DeletePlatformVersionResult {
  PlatformSummary?: PlatformSummary;
}
export declare class PlatformVersionStillReferencedException extends __BaseException {
  readonly name: "PlatformVersionStillReferencedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      PlatformVersionStillReferencedException,
      __BaseException
    >
  );
}
export interface ResourceQuota {
  Maximum?: number;
}
export interface ResourceQuotas {
  ApplicationQuota?: ResourceQuota;
  ApplicationVersionQuota?: ResourceQuota;
  EnvironmentQuota?: ResourceQuota;
  ConfigurationTemplateQuota?: ResourceQuota;
  CustomPlatformQuota?: ResourceQuota;
}
export interface DescribeAccountAttributesResult {
  ResourceQuotas?: ResourceQuotas;
}
export interface DescribeApplicationsMessage {
  ApplicationNames?: string[];
}
export interface DescribeApplicationVersionsMessage {
  ApplicationName?: string;
  VersionLabels?: string[];
  MaxRecords?: number;
  NextToken?: string;
}
export interface OptionRestrictionRegex {
  Pattern?: string;
  Label?: string;
}
export declare type ConfigurationOptionValueType = "List" | "Scalar";
export interface ConfigurationOptionDescription {
  Namespace?: string;
  Name?: string;
  DefaultValue?: string;
  ChangeSeverity?: string;
  UserDefined?: boolean;
  ValueType?: ConfigurationOptionValueType | string;
  ValueOptions?: string[];
  MinValue?: number;
  MaxValue?: number;
  MaxLength?: number;
  Regex?: OptionRestrictionRegex;
}
export interface ConfigurationOptionsDescription {
  SolutionStackName?: string;
  PlatformArn?: string;
  Options?: ConfigurationOptionDescription[];
}
export interface DescribeConfigurationOptionsMessage {
  ApplicationName?: string;
  TemplateName?: string;
  EnvironmentName?: string;
  SolutionStackName?: string;
  PlatformArn?: string;
  Options?: OptionSpecification[];
}
export interface ConfigurationSettingsDescriptions {
  ConfigurationSettings?: ConfigurationSettingsDescription[];
}
export interface DescribeConfigurationSettingsMessage {
  ApplicationName: string | undefined;
  TemplateName?: string;
  EnvironmentName?: string;
}
export declare enum EnvironmentHealthAttribute {
  All = "All",
  ApplicationMetrics = "ApplicationMetrics",
  Causes = "Causes",
  Color = "Color",
  HealthStatus = "HealthStatus",
  InstancesHealth = "InstancesHealth",
  RefreshedAt = "RefreshedAt",
  Status = "Status",
}
export interface DescribeEnvironmentHealthRequest {
  EnvironmentName?: string;
  EnvironmentId?: string;
  AttributeNames?: (EnvironmentHealthAttribute | string)[];
}
export interface InstanceHealthSummary {
  NoData?: number;
  Unknown?: number;
  Pending?: number;
  Ok?: number;
  Info?: number;
  Warning?: number;
  Degraded?: number;
  Severe?: number;
}
export interface DescribeEnvironmentHealthResult {
  EnvironmentName?: string;
  HealthStatus?: string;
  Status?: EnvironmentHealth | string;
  Color?: string;
  Causes?: string[];
  ApplicationMetrics?: ApplicationMetrics;
  InstancesHealth?: InstanceHealthSummary;
  RefreshedAt?: Date;
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export interface DescribeEnvironmentManagedActionHistoryRequest {
  EnvironmentId?: string;
  EnvironmentName?: string;
  NextToken?: string;
  MaxItems?: number;
}
export declare type FailureType =
  | "CancellationFailed"
  | "InternalFailure"
  | "InvalidEnvironmentState"
  | "PermissionsError"
  | "RollbackFailed"
  | "RollbackSuccessful"
  | "UpdateCancelled";
export interface ManagedActionHistoryItem {
  ActionId?: string;
  ActionType?: ActionType | string;
  ActionDescription?: string;
  FailureType?: FailureType | string;
  Status?: ActionHistoryStatus | string;
  FailureDescription?: string;
  ExecutedTime?: Date;
  FinishedTime?: Date;
}
export interface DescribeEnvironmentManagedActionHistoryResult {
  ManagedActionHistoryItems?: ManagedActionHistoryItem[];
  NextToken?: string;
}
export interface DescribeEnvironmentManagedActionsRequest {
  EnvironmentName?: string;
  EnvironmentId?: string;
  Status?: ActionStatus | string;
}
export interface ManagedAction {
  ActionId?: string;
  ActionDescription?: string;
  ActionType?: ActionType | string;
  Status?: ActionStatus | string;
  WindowStartTime?: Date;
}
export interface DescribeEnvironmentManagedActionsResult {
  ManagedActions?: ManagedAction[];
}
export interface DescribeEnvironmentResourcesMessage {
  EnvironmentId?: string;
  EnvironmentName?: string;
}
export interface Instance {
  Id?: string;
}
export interface LaunchConfiguration {
  Name?: string;
}
export interface LaunchTemplate {
  Id?: string;
}
export interface LoadBalancer {
  Name?: string;
}
export interface Queue {
  Name?: string;
  URL?: string;
}
export interface Trigger {
  Name?: string;
}
export interface EnvironmentResourceDescription {
  EnvironmentName?: string;
  AutoScalingGroups?: AutoScalingGroup[];
  Instances?: Instance[];
  LaunchConfigurations?: LaunchConfiguration[];
  LaunchTemplates?: LaunchTemplate[];
  LoadBalancers?: LoadBalancer[];
  Triggers?: Trigger[];
  Queues?: Queue[];
}
export interface EnvironmentResourceDescriptionsMessage {
  EnvironmentResources?: EnvironmentResourceDescription;
}
export interface DescribeEnvironmentsMessage {
  ApplicationName?: string;
  VersionLabel?: string;
  EnvironmentIds?: string[];
  EnvironmentNames?: string[];
  IncludeDeleted?: boolean;
  IncludedDeletedBackTo?: Date;
  MaxRecords?: number;
  NextToken?: string;
}
export declare type EventSeverity =
  | "DEBUG"
  | "ERROR"
  | "FATAL"
  | "INFO"
  | "TRACE"
  | "WARN";
export interface DescribeEventsMessage {
  ApplicationName?: string;
  VersionLabel?: string;
  TemplateName?: string;
  EnvironmentId?: string;
  EnvironmentName?: string;
  PlatformArn?: string;
  RequestId?: string;
  Severity?: EventSeverity | string;
  StartTime?: Date;
  EndTime?: Date;
  MaxRecords?: number;
  NextToken?: string;
}
export interface EventDescription {
  EventDate?: Date;
  Message?: string;
  ApplicationName?: string;
  VersionLabel?: string;
  TemplateName?: string;
  EnvironmentName?: string;
  PlatformArn?: string;
  RequestId?: string;
  Severity?: EventSeverity | string;
}
export interface EventDescriptionsMessage {
  Events?: EventDescription[];
  NextToken?: string;
}
export declare enum InstancesHealthAttribute {
  All = "All",
  ApplicationMetrics = "ApplicationMetrics",
  AvailabilityZone = "AvailabilityZone",
  Causes = "Causes",
  Color = "Color",
  Deployment = "Deployment",
  HealthStatus = "HealthStatus",
  InstanceType = "InstanceType",
  LaunchedAt = "LaunchedAt",
  RefreshedAt = "RefreshedAt",
  System = "System",
}
export interface DescribeInstancesHealthRequest {
  EnvironmentName?: string;
  EnvironmentId?: string;
  AttributeNames?: (InstancesHealthAttribute | string)[];
  NextToken?: string;
}
export interface Deployment {
  VersionLabel?: string;
  DeploymentId?: number;
  Status?: string;
  DeploymentTime?: Date;
}
export interface CPUUtilization {
  User?: number;
  Nice?: number;
  System?: number;
  Idle?: number;
  IOWait?: number;
  IRQ?: number;
  SoftIRQ?: number;
  Privileged?: number;
}
export interface SystemStatus {
  CPUUtilization?: CPUUtilization;
  LoadAverage?: number[];
}
export interface SingleInstanceHealth {
  InstanceId?: string;
  HealthStatus?: string;
  Color?: string;
  Causes?: string[];
  LaunchedAt?: Date;
  ApplicationMetrics?: ApplicationMetrics;
  System?: SystemStatus;
  Deployment?: Deployment;
  AvailabilityZone?: string;
  InstanceType?: string;
}
export interface DescribeInstancesHealthResult {
  InstanceHealthList?: SingleInstanceHealth[];
  RefreshedAt?: Date;
  NextToken?: string;
}
export interface DescribePlatformVersionRequest {
  PlatformArn?: string;
}
export interface CustomAmi {
  VirtualizationType?: string;
  ImageId?: string;
}
export interface PlatformFramework {
  Name?: string;
  Version?: string;
}
export interface PlatformProgrammingLanguage {
  Name?: string;
  Version?: string;
}
export interface PlatformDescription {
  PlatformArn?: string;
  PlatformOwner?: string;
  PlatformName?: string;
  PlatformVersion?: string;
  SolutionStackName?: string;
  PlatformStatus?: PlatformStatus | string;
  DateCreated?: Date;
  DateUpdated?: Date;
  PlatformCategory?: string;
  Description?: string;
  Maintainer?: string;
  OperatingSystemName?: string;
  OperatingSystemVersion?: string;
  ProgrammingLanguages?: PlatformProgrammingLanguage[];
  Frameworks?: PlatformFramework[];
  CustomAmiList?: CustomAmi[];
  SupportedTierList?: string[];
  SupportedAddonList?: string[];
  PlatformLifecycleState?: string;
  PlatformBranchName?: string;
  PlatformBranchLifecycleState?: string;
}
export interface DescribePlatformVersionResult {
  PlatformDescription?: PlatformDescription;
}
export interface DisassociateEnvironmentOperationsRoleMessage {
  EnvironmentName: string | undefined;
}
export interface ListAvailableSolutionStacksResultMessage {
  SolutionStacks?: string[];
  SolutionStackDetails?: SolutionStackDescription[];
}
export interface SearchFilter {
  Attribute?: string;
  Operator?: string;
  Values?: string[];
}
export interface ListPlatformBranchesRequest {
  Filters?: SearchFilter[];
  MaxRecords?: number;
  NextToken?: string;
}
export interface PlatformBranchSummary {
  PlatformName?: string;
  BranchName?: string;
  LifecycleState?: string;
  BranchOrder?: number;
  SupportedTierList?: string[];
}
export interface ListPlatformBranchesResult {
  PlatformBranchSummaryList?: PlatformBranchSummary[];
  NextToken?: string;
}
export interface PlatformFilter {
  Type?: string;
  Operator?: string;
  Values?: string[];
}
export interface ListPlatformVersionsRequest {
  Filters?: PlatformFilter[];
  MaxRecords?: number;
  NextToken?: string;
}
export interface ListPlatformVersionsResult {
  PlatformSummaryList?: PlatformSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceMessage {
  ResourceArn: string | undefined;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface ResourceTagsDescriptionMessage {
  ResourceArn?: string;
  ResourceTags?: Tag[];
}
export declare class ResourceTypeNotSupportedException extends __BaseException {
  readonly name: "ResourceTypeNotSupportedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ResourceTypeNotSupportedException,
      __BaseException
    >
  );
}
export interface RebuildEnvironmentMessage {
  EnvironmentId?: string;
  EnvironmentName?: string;
}
export declare type EnvironmentInfoType = "bundle" | "tail";
export interface RequestEnvironmentInfoMessage {
  EnvironmentId?: string;
  EnvironmentName?: string;
  InfoType: EnvironmentInfoType | string | undefined;
}
export interface RestartAppServerMessage {
  EnvironmentId?: string;
  EnvironmentName?: string;
}
export interface RetrieveEnvironmentInfoMessage {
  EnvironmentId?: string;
  EnvironmentName?: string;
  InfoType: EnvironmentInfoType | string | undefined;
}
export interface EnvironmentInfoDescription {
  InfoType?: EnvironmentInfoType | string;
  Ec2InstanceId?: string;
  SampleTimestamp?: Date;
  Message?: string;
}
export interface RetrieveEnvironmentInfoResultMessage {
  EnvironmentInfo?: EnvironmentInfoDescription[];
}
export interface SwapEnvironmentCNAMEsMessage {
  SourceEnvironmentId?: string;
  SourceEnvironmentName?: string;
  DestinationEnvironmentId?: string;
  DestinationEnvironmentName?: string;
}
export interface TerminateEnvironmentMessage {
  EnvironmentId?: string;
  EnvironmentName?: string;
  TerminateResources?: boolean;
  ForceTerminate?: boolean;
}
export interface UpdateApplicationMessage {
  ApplicationName: string | undefined;
  Description?: string;
}
export interface UpdateApplicationResourceLifecycleMessage {
  ApplicationName: string | undefined;
  ResourceLifecycleConfig: ApplicationResourceLifecycleConfig | undefined;
}
export interface UpdateApplicationVersionMessage {
  ApplicationName: string | undefined;
  VersionLabel: string | undefined;
  Description?: string;
}
export interface UpdateConfigurationTemplateMessage {
  ApplicationName: string | undefined;
  TemplateName: string | undefined;
  Description?: string;
  OptionSettings?: ConfigurationOptionSetting[];
  OptionsToRemove?: OptionSpecification[];
}
export interface UpdateEnvironmentMessage {
  ApplicationName?: string;
  EnvironmentId?: string;
  EnvironmentName?: string;
  GroupName?: string;
  Description?: string;
  Tier?: EnvironmentTier;
  VersionLabel?: string;
  TemplateName?: string;
  SolutionStackName?: string;
  PlatformArn?: string;
  OptionSettings?: ConfigurationOptionSetting[];
  OptionsToRemove?: OptionSpecification[];
}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface UpdateTagsForResourceMessage {
  ResourceArn: string | undefined;
  TagsToAdd?: Tag[];
  TagsToRemove?: string[];
}
export declare type ValidationSeverity = "error" | "warning";
export interface ValidationMessage {
  Message?: string;
  Severity?: ValidationSeverity | string;
  Namespace?: string;
  OptionName?: string;
}
export interface ConfigurationSettingsValidationMessages {
  Messages?: ValidationMessage[];
}
export interface ValidateConfigurationSettingsMessage {
  ApplicationName: string | undefined;
  TemplateName?: string;
  EnvironmentName?: string;
  OptionSettings: ConfigurationOptionSetting[] | undefined;
}
export declare const AbortEnvironmentUpdateMessageFilterSensitiveLog: (
  obj: AbortEnvironmentUpdateMessage
) => any;
export declare const MaxAgeRuleFilterSensitiveLog: (obj: MaxAgeRule) => any;
export declare const MaxCountRuleFilterSensitiveLog: (obj: MaxCountRule) => any;
export declare const ApplicationVersionLifecycleConfigFilterSensitiveLog: (
  obj: ApplicationVersionLifecycleConfig
) => any;
export declare const ApplicationResourceLifecycleConfigFilterSensitiveLog: (
  obj: ApplicationResourceLifecycleConfig
) => any;
export declare const ApplicationDescriptionFilterSensitiveLog: (
  obj: ApplicationDescription
) => any;
export declare const ApplicationDescriptionMessageFilterSensitiveLog: (
  obj: ApplicationDescriptionMessage
) => any;
export declare const ApplicationDescriptionsMessageFilterSensitiveLog: (
  obj: ApplicationDescriptionsMessage
) => any;
export declare const LatencyFilterSensitiveLog: (obj: Latency) => any;
export declare const StatusCodesFilterSensitiveLog: (obj: StatusCodes) => any;
export declare const ApplicationMetricsFilterSensitiveLog: (
  obj: ApplicationMetrics
) => any;
export declare const ApplicationResourceLifecycleDescriptionMessageFilterSensitiveLog: (
  obj: ApplicationResourceLifecycleDescriptionMessage
) => any;
export declare const SourceBuildInformationFilterSensitiveLog: (
  obj: SourceBuildInformation
) => any;
export declare const S3LocationFilterSensitiveLog: (obj: S3Location) => any;
export declare const ApplicationVersionDescriptionFilterSensitiveLog: (
  obj: ApplicationVersionDescription
) => any;
export declare const ApplicationVersionDescriptionMessageFilterSensitiveLog: (
  obj: ApplicationVersionDescriptionMessage
) => any;
export declare const ApplicationVersionDescriptionsMessageFilterSensitiveLog: (
  obj: ApplicationVersionDescriptionsMessage
) => any;
export declare const ApplyEnvironmentManagedActionRequestFilterSensitiveLog: (
  obj: ApplyEnvironmentManagedActionRequest
) => any;
export declare const ApplyEnvironmentManagedActionResultFilterSensitiveLog: (
  obj: ApplyEnvironmentManagedActionResult
) => any;
export declare const AssociateEnvironmentOperationsRoleMessageFilterSensitiveLog: (
  obj: AssociateEnvironmentOperationsRoleMessage
) => any;
export declare const AutoScalingGroupFilterSensitiveLog: (
  obj: AutoScalingGroup
) => any;
export declare const SolutionStackDescriptionFilterSensitiveLog: (
  obj: SolutionStackDescription
) => any;
export declare const CheckDNSAvailabilityMessageFilterSensitiveLog: (
  obj: CheckDNSAvailabilityMessage
) => any;
export declare const CheckDNSAvailabilityResultMessageFilterSensitiveLog: (
  obj: CheckDNSAvailabilityResultMessage
) => any;
export declare const ComposeEnvironmentsMessageFilterSensitiveLog: (
  obj: ComposeEnvironmentsMessage
) => any;
export declare const EnvironmentLinkFilterSensitiveLog: (
  obj: EnvironmentLink
) => any;
export declare const ListenerFilterSensitiveLog: (obj: Listener) => any;
export declare const LoadBalancerDescriptionFilterSensitiveLog: (
  obj: LoadBalancerDescription
) => any;
export declare const EnvironmentResourcesDescriptionFilterSensitiveLog: (
  obj: EnvironmentResourcesDescription
) => any;
export declare const EnvironmentTierFilterSensitiveLog: (
  obj: EnvironmentTier
) => any;
export declare const EnvironmentDescriptionFilterSensitiveLog: (
  obj: EnvironmentDescription
) => any;
export declare const EnvironmentDescriptionsMessageFilterSensitiveLog: (
  obj: EnvironmentDescriptionsMessage
) => any;
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
export declare const CreateApplicationMessageFilterSensitiveLog: (
  obj: CreateApplicationMessage
) => any;
export declare const BuildConfigurationFilterSensitiveLog: (
  obj: BuildConfiguration
) => any;
export declare const CreateApplicationVersionMessageFilterSensitiveLog: (
  obj: CreateApplicationVersionMessage
) => any;
export declare const ConfigurationOptionSettingFilterSensitiveLog: (
  obj: ConfigurationOptionSetting
) => any;
export declare const ConfigurationSettingsDescriptionFilterSensitiveLog: (
  obj: ConfigurationSettingsDescription
) => any;
export declare const SourceConfigurationFilterSensitiveLog: (
  obj: SourceConfiguration
) => any;
export declare const CreateConfigurationTemplateMessageFilterSensitiveLog: (
  obj: CreateConfigurationTemplateMessage
) => any;
export declare const OptionSpecificationFilterSensitiveLog: (
  obj: OptionSpecification
) => any;
export declare const CreateEnvironmentMessageFilterSensitiveLog: (
  obj: CreateEnvironmentMessage
) => any;
export declare const CreatePlatformVersionRequestFilterSensitiveLog: (
  obj: CreatePlatformVersionRequest
) => any;
export declare const BuilderFilterSensitiveLog: (obj: Builder) => any;
export declare const PlatformSummaryFilterSensitiveLog: (
  obj: PlatformSummary
) => any;
export declare const CreatePlatformVersionResultFilterSensitiveLog: (
  obj: CreatePlatformVersionResult
) => any;
export declare const CreateStorageLocationResultMessageFilterSensitiveLog: (
  obj: CreateStorageLocationResultMessage
) => any;
export declare const DeleteApplicationMessageFilterSensitiveLog: (
  obj: DeleteApplicationMessage
) => any;
export declare const DeleteApplicationVersionMessageFilterSensitiveLog: (
  obj: DeleteApplicationVersionMessage
) => any;
export declare const DeleteConfigurationTemplateMessageFilterSensitiveLog: (
  obj: DeleteConfigurationTemplateMessage
) => any;
export declare const DeleteEnvironmentConfigurationMessageFilterSensitiveLog: (
  obj: DeleteEnvironmentConfigurationMessage
) => any;
export declare const DeletePlatformVersionRequestFilterSensitiveLog: (
  obj: DeletePlatformVersionRequest
) => any;
export declare const DeletePlatformVersionResultFilterSensitiveLog: (
  obj: DeletePlatformVersionResult
) => any;
export declare const ResourceQuotaFilterSensitiveLog: (
  obj: ResourceQuota
) => any;
export declare const ResourceQuotasFilterSensitiveLog: (
  obj: ResourceQuotas
) => any;
export declare const DescribeAccountAttributesResultFilterSensitiveLog: (
  obj: DescribeAccountAttributesResult
) => any;
export declare const DescribeApplicationsMessageFilterSensitiveLog: (
  obj: DescribeApplicationsMessage
) => any;
export declare const DescribeApplicationVersionsMessageFilterSensitiveLog: (
  obj: DescribeApplicationVersionsMessage
) => any;
export declare const OptionRestrictionRegexFilterSensitiveLog: (
  obj: OptionRestrictionRegex
) => any;
export declare const ConfigurationOptionDescriptionFilterSensitiveLog: (
  obj: ConfigurationOptionDescription
) => any;
export declare const ConfigurationOptionsDescriptionFilterSensitiveLog: (
  obj: ConfigurationOptionsDescription
) => any;
export declare const DescribeConfigurationOptionsMessageFilterSensitiveLog: (
  obj: DescribeConfigurationOptionsMessage
) => any;
export declare const ConfigurationSettingsDescriptionsFilterSensitiveLog: (
  obj: ConfigurationSettingsDescriptions
) => any;
export declare const DescribeConfigurationSettingsMessageFilterSensitiveLog: (
  obj: DescribeConfigurationSettingsMessage
) => any;
export declare const DescribeEnvironmentHealthRequestFilterSensitiveLog: (
  obj: DescribeEnvironmentHealthRequest
) => any;
export declare const InstanceHealthSummaryFilterSensitiveLog: (
  obj: InstanceHealthSummary
) => any;
export declare const DescribeEnvironmentHealthResultFilterSensitiveLog: (
  obj: DescribeEnvironmentHealthResult
) => any;
export declare const DescribeEnvironmentManagedActionHistoryRequestFilterSensitiveLog: (
  obj: DescribeEnvironmentManagedActionHistoryRequest
) => any;
export declare const ManagedActionHistoryItemFilterSensitiveLog: (
  obj: ManagedActionHistoryItem
) => any;
export declare const DescribeEnvironmentManagedActionHistoryResultFilterSensitiveLog: (
  obj: DescribeEnvironmentManagedActionHistoryResult
) => any;
export declare const DescribeEnvironmentManagedActionsRequestFilterSensitiveLog: (
  obj: DescribeEnvironmentManagedActionsRequest
) => any;
export declare const ManagedActionFilterSensitiveLog: (
  obj: ManagedAction
) => any;
export declare const DescribeEnvironmentManagedActionsResultFilterSensitiveLog: (
  obj: DescribeEnvironmentManagedActionsResult
) => any;
export declare const DescribeEnvironmentResourcesMessageFilterSensitiveLog: (
  obj: DescribeEnvironmentResourcesMessage
) => any;
export declare const InstanceFilterSensitiveLog: (obj: Instance) => any;
export declare const LaunchConfigurationFilterSensitiveLog: (
  obj: LaunchConfiguration
) => any;
export declare const LaunchTemplateFilterSensitiveLog: (
  obj: LaunchTemplate
) => any;
export declare const LoadBalancerFilterSensitiveLog: (obj: LoadBalancer) => any;
export declare const QueueFilterSensitiveLog: (obj: Queue) => any;
export declare const TriggerFilterSensitiveLog: (obj: Trigger) => any;
export declare const EnvironmentResourceDescriptionFilterSensitiveLog: (
  obj: EnvironmentResourceDescription
) => any;
export declare const EnvironmentResourceDescriptionsMessageFilterSensitiveLog: (
  obj: EnvironmentResourceDescriptionsMessage
) => any;
export declare const DescribeEnvironmentsMessageFilterSensitiveLog: (
  obj: DescribeEnvironmentsMessage
) => any;
export declare const DescribeEventsMessageFilterSensitiveLog: (
  obj: DescribeEventsMessage
) => any;
export declare const EventDescriptionFilterSensitiveLog: (
  obj: EventDescription
) => any;
export declare const EventDescriptionsMessageFilterSensitiveLog: (
  obj: EventDescriptionsMessage
) => any;
export declare const DescribeInstancesHealthRequestFilterSensitiveLog: (
  obj: DescribeInstancesHealthRequest
) => any;
export declare const DeploymentFilterSensitiveLog: (obj: Deployment) => any;
export declare const CPUUtilizationFilterSensitiveLog: (
  obj: CPUUtilization
) => any;
export declare const SystemStatusFilterSensitiveLog: (obj: SystemStatus) => any;
export declare const SingleInstanceHealthFilterSensitiveLog: (
  obj: SingleInstanceHealth
) => any;
export declare const DescribeInstancesHealthResultFilterSensitiveLog: (
  obj: DescribeInstancesHealthResult
) => any;
export declare const DescribePlatformVersionRequestFilterSensitiveLog: (
  obj: DescribePlatformVersionRequest
) => any;
export declare const CustomAmiFilterSensitiveLog: (obj: CustomAmi) => any;
export declare const PlatformFrameworkFilterSensitiveLog: (
  obj: PlatformFramework
) => any;
export declare const PlatformProgrammingLanguageFilterSensitiveLog: (
  obj: PlatformProgrammingLanguage
) => any;
export declare const PlatformDescriptionFilterSensitiveLog: (
  obj: PlatformDescription
) => any;
export declare const DescribePlatformVersionResultFilterSensitiveLog: (
  obj: DescribePlatformVersionResult
) => any;
export declare const DisassociateEnvironmentOperationsRoleMessageFilterSensitiveLog: (
  obj: DisassociateEnvironmentOperationsRoleMessage
) => any;
export declare const ListAvailableSolutionStacksResultMessageFilterSensitiveLog: (
  obj: ListAvailableSolutionStacksResultMessage
) => any;
export declare const SearchFilterFilterSensitiveLog: (obj: SearchFilter) => any;
export declare const ListPlatformBranchesRequestFilterSensitiveLog: (
  obj: ListPlatformBranchesRequest
) => any;
export declare const PlatformBranchSummaryFilterSensitiveLog: (
  obj: PlatformBranchSummary
) => any;
export declare const ListPlatformBranchesResultFilterSensitiveLog: (
  obj: ListPlatformBranchesResult
) => any;
export declare const PlatformFilterFilterSensitiveLog: (
  obj: PlatformFilter
) => any;
export declare const ListPlatformVersionsRequestFilterSensitiveLog: (
  obj: ListPlatformVersionsRequest
) => any;
export declare const ListPlatformVersionsResultFilterSensitiveLog: (
  obj: ListPlatformVersionsResult
) => any;
export declare const ListTagsForResourceMessageFilterSensitiveLog: (
  obj: ListTagsForResourceMessage
) => any;
export declare const ResourceTagsDescriptionMessageFilterSensitiveLog: (
  obj: ResourceTagsDescriptionMessage
) => any;
export declare const RebuildEnvironmentMessageFilterSensitiveLog: (
  obj: RebuildEnvironmentMessage
) => any;
export declare const RequestEnvironmentInfoMessageFilterSensitiveLog: (
  obj: RequestEnvironmentInfoMessage
) => any;
export declare const RestartAppServerMessageFilterSensitiveLog: (
  obj: RestartAppServerMessage
) => any;
export declare const RetrieveEnvironmentInfoMessageFilterSensitiveLog: (
  obj: RetrieveEnvironmentInfoMessage
) => any;
export declare const EnvironmentInfoDescriptionFilterSensitiveLog: (
  obj: EnvironmentInfoDescription
) => any;
export declare const RetrieveEnvironmentInfoResultMessageFilterSensitiveLog: (
  obj: RetrieveEnvironmentInfoResultMessage
) => any;
export declare const SwapEnvironmentCNAMEsMessageFilterSensitiveLog: (
  obj: SwapEnvironmentCNAMEsMessage
) => any;
export declare const TerminateEnvironmentMessageFilterSensitiveLog: (
  obj: TerminateEnvironmentMessage
) => any;
export declare const UpdateApplicationMessageFilterSensitiveLog: (
  obj: UpdateApplicationMessage
) => any;
export declare const UpdateApplicationResourceLifecycleMessageFilterSensitiveLog: (
  obj: UpdateApplicationResourceLifecycleMessage
) => any;
export declare const UpdateApplicationVersionMessageFilterSensitiveLog: (
  obj: UpdateApplicationVersionMessage
) => any;
export declare const UpdateConfigurationTemplateMessageFilterSensitiveLog: (
  obj: UpdateConfigurationTemplateMessage
) => any;
export declare const UpdateEnvironmentMessageFilterSensitiveLog: (
  obj: UpdateEnvironmentMessage
) => any;
export declare const UpdateTagsForResourceMessageFilterSensitiveLog: (
  obj: UpdateTagsForResourceMessage
) => any;
export declare const ValidationMessageFilterSensitiveLog: (
  obj: ValidationMessage
) => any;
export declare const ConfigurationSettingsValidationMessagesFilterSensitiveLog: (
  obj: ConfigurationSettingsValidationMessages
) => any;
export declare const ValidateConfigurationSettingsMessageFilterSensitiveLog: (
  obj: ValidateConfigurationSettingsMessage
) => any;
